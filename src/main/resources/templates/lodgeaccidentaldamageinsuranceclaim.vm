#parse("templates/layout.vm")
#@mainLayout()
<div class="form">
#parse( "templates/claimsheader.vm" )
<table border="0" cellspacing="0" cellpadding="0" align="center" class="heading">
    <tr>
        <td>Accidental Damage Insurance Claim</td>
    </tr>
</table>
    <table border="0" cellspacing="0" cellpadding="0" align="center">
        <td align="center">    <a href="/view_policy/AccidentalDamageInsurance/$customer.getCustomerid()" rel="modal:open" class="button">View Policy</a>
        </td></table>
<form action="" method="post" id="accidental-damage-insurance-claim">
    <table border="0" cellpadding="10" align="center" class="form-table">
        <tr>
            <td>Date of incident</td>
            <td><input type="date" name="dateofincident" required></td>
        </tr>
        <tr>
            <td>Time of incident</td>
            <td><input type="time" name="timeofincident" required></td>
        </tr>
        <tr>
            <td>Description of incident</td>
            <td><textarea name="description" required></textarea></td>
        </tr>
        <tr>
            <td>Supporting Documents</td>
            <td>
                <label for="file" class="custom-file-upload">
                    Upload files
                </label>
                <input type="file" name="file" id="file" multiple>
                <input type="hidden" name="files" id="files">
                <div id="uploads"></div>
            </td>
        </tr>
        <tr>
            <td align="center" colspan="2">
                <input type="submit"/>
            </td>
        </tr>
    </table>
</form>
<script>
$(document).ready(function(){

	$('input[type=file]').change(function(){

		$(this).simpleUpload("/upload_file/$customer.getCustomerid()", {

			/*
			 * Each of these callbacks are executed for each file.
			 * To add callbacks that are executed only once, see init() and finish().
			 *
			 * "this" is an object that can carry data between callbacks for each file.
			 * Data related to the upload is stored in this.upload.
			 */

			start: function(file){
				//upload started
				this.block = $('<div class="block"></div>');
				this.progressBar = $('<div class="progressBar"></div>');
				this.block.append(this.progressBar);
				$('#uploads').append(this.block);
			},

			progress: function(progress){
				//received progress
				this.progressBar.width(progress + "%");
			},

			success: function(data){
				//upload successful

				this.progressBar.remove();


				if (data.success) {
					//now fill the block with the format of the uploaded file
					var formatDiv = $('<div class="file"></div>').text(data.file);
					if($("#files").val() == ""){
					$("#files").val(data.id);
					} else {
					    $("#files").val($("#files").val() + "," + data.id);
					 }
					this.block.append(formatDiv);
					var deletefileDiv = $('<a class="deletefile" onclick="deleteFile(this,' + data.id + ')">X</a>');
					this.block.append(deletefileDiv);
				} else {
					//our application returned an error
					var error = data.error.message;
					var errorDiv = $('<div class="error"></div>').text(error);
					this.block.append(errorDiv);
				}

			},

			error: function(error){
				//upload failed
				this.progressBar.remove();
				var error = error.message;
				var errorDiv = $('<div class="error"></div>').text(error);
				this.block.append(errorDiv);
			}

		});

	});
  $("#accidental-damage-insurance-claim").validate();

});
Array.prototype.remove = function() {
    var what, a = arguments, L = a.length, ax;
    while (L && this.length) {
        what = a[--L];
        while ((ax = this.indexOf(what)) !== -1) {
            this.splice(ax, 1);
        }
    }
    return this;
};
function deleteFile(that, id){
    $(that).parent().remove();
    $("#files").val($("#files").val().split(",").remove(String(id)).join(","));
    }
</script>

</div>
#end